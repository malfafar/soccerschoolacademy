---
- name: Install packages
  apt: name={{ item }}
  with_items:
    - libpq-dev
    - postgresql
    - postgresql-contrib
    - python-pip
    - python-dev
    - acl

- name: Configure PostgreSQL - postgresql.conf
  template: src=postgresql.conf.j2 dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
  notify: restart postgresql

- name: Configure PostgreSQL - pg_hba.conf
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf
  notify: restart postgresql


- name: Install required Python modules
  pip: name=psycopg2

- name: Create postgresql user
  postgresql_user: name={{ env_db_user }} password={{ env_db_password }} role_attr_flags=CREATEDB,SUPERUSER,CREATEROLE
  become: true
  become_user: postgres

- name: Create postgresql database
  postgresql_db: name={{ env_db_name }} owner={{ env_db_user }}
  become: true
  become_user: postgres

# - name: Assure that config dir exists
#   file: path={{ app_config_path }} state=directory
#
# - name: Create config/database.yml
#   template: src=database.yml.j2 dest={{ app_config_path }}/database.yml owner={{ rails_user }} mode=0600 backup=yes
#   when: postgresql_orm in ['activerecord', 'sequel', 'datamapper']

- name: Make sure the postgis extensions are installed
  apt: name={{ item }}
  with_items:
    - libgeos-c1
    - 'postgresql-{{ postgresql_version }}-postgis-{{ postgresql_ext_postgis_version }}'
  notify: restart postgresql
  when: "postgresql_extensions and 'postgis' in postgresql_extensions"

- name: Create extensions
  become: true
  become_user: '{{ postgresql_admin_user }}'
  shell: "psql {{ env_db_name }} -c 'CREATE EXTENSION IF NOT EXISTS {{ item }};'"
  with_items: '{{postgresql_extensions}}'
  when: postgresql_extensions
